#!/bin/bash

VERSION="1.0"
VOLUME_NAME=$1
PORT=$2

# Function to check for updates and update the script
check_for_updates() {
    local version_url="https://raw.githubusercontent.com/fsteltenkamp/DockerScripts/main/dvfbr.ver"
    local url="https://raw.githubusercontent.com/fsteltenkamp/DockerScripts/main/dvfbr"
    local tmp_file="/tmp/dvfbr_new"

    # Check if the content of $version_url is different to our $VERSION var:
    local REMOTE_VERSION=$(curl -s $version_url) # catch curl errors:
    if [ $? -ne 0 ]; then
        echo "Error: Could not check for updates."
        return
    fi
    if [ "$REMOTE_VERSION" != "$VERSION" ]; then
        echo "A new version of the script is available. Updating..."
        curl -s -o "$tmp_file" "$url"
        mv "$tmp_file" "$0"
        chmod +x "$0"
        echo "Update complete. Please re-run the script. (arrow-up + enter)"
        exit 0
    fi
}

usage() {
    echo "Usage: $0 <volume_name> [port]"
    echo "Example: $0 myvolume"    
}

check_arguments() {
    if [ -z "$PORT" ]; then
        PORT=8000
    fi
    if [ -z "$VOLUME_NAME" ]; then
        echo "Error: Missing arguments"
        usage
        exit 1
    fi
}

# check if docker volume exists (return 0 if it does)
check_volume() {
    volume_inspect=$(docker volume inspect "$VOLUME_NAME" 2> /dev/null)
    if [ $? -eq 0 ]; then
        return 0
    else
        return 1
    fi
}

start_filebrowser() {
    docker run --rm -v $VOLUME_NAME:/srv -p $PORT:80 filebrowser/filebrowser:latest
}

get_host_ip() {
    # Get the IP of the host
    host_ip=$(hostname -I | awk '{print $1}')
    echo $host_ip
}

install_other_scripts() {
    # request permission:
    echo "This action will install several more scripts on this system to aid in handling docker volumes."
    echo "The Scripts will be installed in /usr/local/bin."
    echo "Do you want to continue? (y/n)"
    read -r answer
    # only continue if user gives permission:
    if [ "$answer" == "y" ]; then
        # download the scripts:
        curl -s -o /usr/local/bin/dvbr https://raw.githubusercontent.com/fsteltenkamp/DockerScripts/main/dvbr
        curl -s -o /usr/local/bin/dvls https://raw.githubusercontent.com/fsteltenkamp/DockerScripts/main/dvls
        curl -s -o /usr/local/bin/dvfbr https://raw.githubusercontent.com/fsteltenkamp/DockerScripts/main/dvfbr
        curl -s -o /usr/local/bin/dvsh https://raw.githubusercontent.com/fsteltenkamp/DockerScripts/main/dvsh
        curl -s -o /usr/local/bin/dvsmbcr https://raw.githubusercontent.com/fsteltenkamp/DockerScripts/main/dvsmbcr
        # make them executable:
        chmod +x /usr/local/bin/dvbr
        chmod +x /usr/local/bin/dvfbr
        chmod +x /usr/local/bin/dvls
        chmod +x /usr/local/bin/dvsh
        chmod +x /usr/local/bin/dvsmbcr
        echo "Scripts installed. You can now use the following scripts:"
        echo "- dvbr.....backup and restore Docker Volumes."
        echo "- dvls.....list files inside a Docker Volume."
        echo "- dvfbr....start a filebrowser to manage files in a Docker Volume."
        echo "- dvsh.....start a shell inside a Docker Volume."
        echo "- dvsmbcr..easily create a new Volume that is connected to a SMB Share."
    fi
}

# MAIN
# check if the user wants to install the other scripts:
if [[ "$@" == *"--install"* ]]; then
    install_other_scripts
    exit
fi
# check if the user wants to update the script:
if [[ "$@" == *"--update"* ]]; then
    check_for_updates
    exit
fi
check_arguments
if [ check_volume ]; then
    host_ip=$(get_host_ip)
    echo "Open your browser at http://$host_ip:$PORT"
    start_filebrowser
fi